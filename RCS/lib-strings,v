head	1.29;
access;
symbols
	GlowMUF1-1-1:1.25
	GlowMUF102:1.12;
locks
	feaelin:1.29; strict;
comment	@# @;


1.29
date	2016.03.09.03.16.45;	author feaelin;	state Exp;
branches;
next	1.28;

1.28
date	2012.03.20.14.43.56;	author feaelin;	state Exp;
branches;
next	1.27;

1.27
date	2008.10.24.02.26.18;	author feaelin;	state Exp;
branches;
next	1.26;

1.26
date	2008.06.16.02.49.31;	author feaelin;	state Exp;
branches;
next	1.25;

1.25
date	2006.08.27.00.15.40;	author feaelin;	state Exp;
branches;
next	1.24;

1.24
date	2006.08.02.13.25.08;	author feaelin;	state Exp;
branches;
next	1.23;

1.23
date	2006.01.18.01.01.21;	author feaelin;	state Exp;
branches;
next	1.22;

1.22
date	2005.09.26.16.18.53;	author feaelin;	state Exp;
branches;
next	1.21;

1.21
date	2005.09.25.13.07.10;	author feaelin;	state Exp;
branches;
next	1.20;

1.20
date	2005.04.07.21.08.58;	author feaelin;	state Exp;
branches;
next	1.19;

1.19
date	2005.04.05.16.42.56;	author feaelin;	state Exp;
branches;
next	1.18;

1.18
date	2005.04.05.15.31.20;	author feaelin;	state Exp;
branches;
next	1.17;

1.17
date	2005.04.05.15.23.19;	author feaelin;	state Exp;
branches;
next	1.16;

1.16
date	2005.04.03.15.02.27;	author feaelin;	state Exp;
branches;
next	1.15;

1.15
date	2005.04.03.14.55.01;	author feaelin;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.21.01.31.43;	author feaelin;	state Exp;
branches;
next	1.13;

1.13
date	2004.08.06.14.12.22;	author feaelin;	state Exp;
branches;
next	1.12;

1.12
date	2004.04.22.17.25.53;	author feaelin;	state Exp;
branches;
next	1.11;

1.11
date	2001.02.22.20.46.31;	author feaelin;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.22.20.39.56;	author feaelin;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.27.16.57.13;	author feaelin;	state Exp;
branches;
next	1.8;

1.8
date	99.02.13.19.06.17;	author feaelin;	state Exp;
branches;
next	1.7;

1.7
date	98.07.30.19.25.37;	author glow;	state Exp;
branches;
next	1.6;

1.6
date	98.07.30.19.20.41;	author glow;	state Exp;
branches;
next	1.5;

1.5
date	98.07.30.19.15.22;	author glow;	state Exp;
branches;
next	1.4;

1.4
date	98.07.30.19.14.48;	author glow;	state Exp;
branches;
next	1.3;

1.3
date	98.07.30.04.11.20;	author glow;	state Exp;
branches;
next	1.2;

1.2
date	98.07.28.03.35.38;	author glow;	state Exp;
branches;
next	1.1;

1.1
date	98.07.27.21.15.02;	author glow;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Add new word 'STR-capitalize' to capitalize the first word of a string.
@
text
@wh me=Beginning installation of lib-strings...
@@prog lib-strings
1 99999 d
1 i
( lib-strings: $Date: 2012/03/20 14:43:56 $ $Revision: 1.28 $                 )
( Purpose: Provides various string cleanup and parsing routines               )
( Author: Unknown                                                             )
( Contributors: Feaelin, Andy                                                 )
( Dependencies: None                                                          )
( --------------------------------------------------------------------------- )
( Where relevant, all of these functions should be glow-ansi-color code aware.)
(                                                                             )
( STR-command   [ string -- string ]                                          )
(     Converts any of these: "#help", "-help", "/help" to "help". If there is )
(     not a command character: "#", "-", or "/", it returns ""                )
( STR-parse     [ string -- string1 string2 string3                           )
(     Converts a typical command line string into its individual parts. For   )
(     Example: "page #fast foobar=A quick message!" is converted to:          )
(     "fast" "foobar" "A quick message!"                                      )
( STR-blank?    [ string -- boolean ]                                         )
(     Returns true if the string is empty, or if it contains only spaces and  )
(     glow-ansi-color codes. All these will return true: "", "  ", "^RED^".   )
( STR-null?     [ string -- boolean ]                                         )
(     Returns true if the string is empty.                                    )
( STR-sms       [ string -- boolean ]                                         )
(     Reduces multiple contiguous spaces to single spaces: "foo  bar   baz"   )
(     becomes "foo bar baz".                                                  )
( STR-countOccurence [ string1 string2 -- count ]                             )
(     Counts the number of times string2 appears in string1. If string2 is    )
(     the empty string, countOccurrence returns the length of string1.        )
( STR-split     [ string delimiter -- left-string right-string ]              )
(     Splits string into two strings at the first occurence of 'delimiter'.   )
(     "Foo#Bar#Baz" "#" STR-split yields: "Foo" "Bar#Baz"                     )
( STR-rsplit    [ string delimiter -- left-string right-string ]              )
(     Splits string into two strings at the last occurence of 'delimiter'.   )
(     "Foo#Bar#Baz" "#" STR-rsplit yields: "Foo#Bar" "Baz"                    )
( STR-splitargs [ string -- string string ]                                   )
(     Splits string into two strings at the first occurence of a space or an  )
(     equal sign. "foo=bar" or "foo bar" both would become "foo" "bar"        )
( STR-fillfield [ string character width -- pad-string ]                      )
(     Returns a string of with sufficient number of 'character' to pad the    )
(     original string to 'width' length. For example:                         )
(     "foo" "#" 5 STR-fillfield yields: "foo" "##".                           )
( STR-left      [ string width -- space-padded-string ]                       )
(     Adds spaces to 'string' until it is 'width' wide. "foo" 5 STR-left is   )
(     equivalent to: "foo" dup " " 5 STR-fillfield strcat, produces: "foo  "  )
( STR-center    [ string width -- centered-string ]                           )
(     Adds spaces to 'string' on both sides until it is centered in a string  )
(     'width' long. "foo" 7 STR-center produces: "  foo  "                    )
( STR-right     [ string width -- right-justified-string ]                    )
(     Adds spaces to the left side of 'string' until the string is 'width'    )
(     long. "foo" 5 STR-left is equivalent to:                                )
(     "foo" dup " " 5 STR-fillfield swap strcat, produces: "  foo"            )
( STR-asc       [ character -- integer ]                                      )
(     Returns the ASCII character code for 'character'.                       )
( STR-char      [ integer -- character ]                                      )
(     Converts 'integer' into its ASCII character equivalent.                 )
( STR-singlespace [ string -- string ]                                        )
(     Compacts pairs of space characters into one space character             )
(     "foo  bar" --> "foo bar"                                                )
( STR-capitalize [ string -- string ]                                         )
(     Capitalizes the first word in the string                                )
( STR-cleancommas [ string -- string ]                                        )
(     Under repair, check back later.                                         )
( The following routines are deprecated, do not use them.                     )
( STR-sls      [       str -- str'          ]  use 'striplead'                )
( STR-sts      [       str -- str'          ]  use 'striptail'                )
( STR-strip    [       str -- str'          ]  use 'strip'                    )
( --------------------------------------------------------------------------- )
(
  $Log: lib-strings,v $
  Revision 1.28  2012/03/20 14:43:56  feaelin
  * Modified STR-parse to handle -cmd /cmd in addition to #cmd
  * Added STR-singlespace to the documentation

  Revision 1.27  2008/10/24 02:26:18  feaelin
  Added STR-countOccurrence

  Revision 1.26  2008/06/16 02:49:31  feaelin
  Rewrote documentation to be more comprehensible.
  
  Revision 1.25  2006/08/27 00:15:40  feaelin
  Corrected definition of STR-blank?. It now handles strings with glow-ansi
  codes in them correctly by stripping them first.
  
  Added STR-null? to parallel STR-blank?. STR-null? will only be true if the
  string is entirely empty.
  
  Revision 1.24  2006/08/02 13:25:08  feaelin
  Added STR-command...converts a string of '#help' or '/help' or '-help' to
  simply 'help'.
  
  Revision 1.23  2006/01/18 01:01:21  feaelin
  Whoops. Forgot to make cleancommas public.
 
  Revision 1.22  2005/09/26 16:18:53  feaelin
  Ported cleancommas from lib-glow-standard
 
  Revision 1.21  2005/09/25 13:07:10  feaelin
  Changelog update
 
  Revision 1.20  2005/04/07 21:08:58  feaelin
  Library Symbol added
 
  Revision 1.18  2005/04/05 15:31:20  feaelin
  Updated documentation in light of the new library word name standard
 
  Revision 1.17  2005/04/05 15:23:19  feaelin
  Provided more aliases of the library words
 
  Revision 1.16  2005/04/03 15:02:27  feaelin
  Simple whitespace changes.
 
  Revision 1.15  2005/04/03 14:55:01  feaelin
  Fixed installer script
 
  Revision 1.14  2005/03/21 01:31:43  feaelin
  General maintenance and documentation updates
 
  Revision 1.13  2004/08/06 14:12:22  feaelin
  Minor documentation corrections.
 
  Revision 1.12  2004/04/22 17:25:53  feaelin
  Documentation Cleanup
 
  Revision 1.11  2001/02/22 20:46:31  feaelin
  Documentation correction.
   
  Revision 1.10  2001/02/22 20:39:56  feaelin
  Added support to STRfillfield, STRcenter STRleft, STRright to detect
  and handle correctly strings with ANSI codes in them.  Credit goes to
  Syvel for the original concept for this correction.
  
  Revision 1.8  1999/02/13 19:06:17  feaelin
  Fixed .split2 entry
  
  Revision 1.6  1998/07/30 19:20:41  feaelin
  Added synonyms of .split: .splitarg, .splitargs, .splitfirst, .strcutat.
  
  Revision 1.4  1998/07/30 19:14:48  feaelin
  Added STRsplitargs/.splitargs
  
  Revision 1.3  1998/07/30 04:11:20  feaelin
  Updated STRsplit
  
  Revision 1.2  1998/07/28 03:35:38  feaelin
  Corrected wiz-level.
)  
( --------------------------------------------------------------------------- )
: cleancommas ( s -- s )
  dup not if exit then
  dup strlen 1 - over ", " rinstr = if dup strlen 2 - strcut pop then
  dup strlen over "," rinstr = if dup strlen 1 - strcut pop then
  dup " " 1 strncmp not if 1 strcut swap pop then
  dup ", " rinstr dup if
     over swap 1 - strcut pop ", " rinstr if
  dup ", " rinstr strcut " and" swap strcat strcat
  else " and " ", " subst then else pop then
;
 
: split ( s si -- s s )
   over over instr dup if
      rot swap 1 - strcut rot strlen strcut swap pop
   else pop pop "" then
;
 
: splitargs ( s -- s s )
  dup " " instr if
    dup "=" instr if
      dup " " instr over "=" instr - 0 < if
        " " split
      else "=" split then
    else " " split then
  else "=" split then
;
 
: rsplit
    swap over over swap
    rinstr dup not if
        pop swap pop ""
    else
        1 - strcut rot
        strlen strcut
        swap pop
    then
;
 
: sms ( str -- str')
    dup "  " instr if
        " " "  " subst 'sms jmp
    then
;
 
: fillfield (str padchar fieldwidth -- padstr)
  rot ansi_strlen - dup 1 < if pop pop "" exit then
  swap over begin swap dup strcat swap 2 / dup not until pop
  swap ansi_strcut pop
;
 
: left (str fieldwidth -- str')
  over " " rot fillfield strcat
;
 
: right (str fieldwidth -- str')
  over " " rot fillfield swap strcat
;
 
: center (str fieldwidth -- str')
  over " " rot fillfield
  dup ansi_strlen 2 / ansi_strcut
  rot swap strcat strcat
;
 
: STRasc ( c -- i )
    " !\"#$%&'()*+,-./0123456789:;<=>?@@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    "[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~" strcat
    swap
    dup not if
	and exit
    then
    instr dup if
        31 +
    then
;
 
: STRchr ( i -- c )
    dup 31 > over 128 < and if
        " !\"#$%&'()*+,-./0123456789:;<=>?@@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        "[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~" strcat
        swap 32 - strcut swap pop 1 strcut pop
    else
        pop "."
    then
;
 
: STR-capitalize ( string --> string )
  1 strcut swap toupper swap strcat
; public STR-capitalize
 
: STR-countOccurrence ( s s -- i )
  dup "" strcmp if
    dup strlen -3 rotate ( s2len s1 s2 )
    over strlen -3 rotate ( s2len s1len s1 s2 )
    "" swap subst strlen ( s2len s1len s1cutlen )
    - swap /
  else
    "STR-countOccurrence cannot count empty strings." abort
  then
; public STR-countOccurrence
 
: STR-command ( s -- s )
  dup
  "#" 1 strncmp
  over "-" 1 strncmp and
  over "/" 1 strncmp and
  if
    pop "" 
  then
  1 strcut swap pop
; public STR-command
 
: STRparse ( s -- s1 s2 s3 )
  (
    Before: " #option  tom dick  harry = message "
    After:  "option" "tom dick harry" " message "
  )
  "=" rsplit swap
  striplead dup
  "#" 1 strncmp not over "-" 1 strncmp not or over "/" 1 strncmp not or if
    1 strcut swap pop
    " " split
  else
    "" swap
  then
  strip sms rot
;
 
public split
public rsplit
public sms
public fillfield
public left
public right
public center
public STRasc
public STRchr
public STRparse
public splitargs
public cleancommas
.
c
q
@@register lib-strings=lib/strings
@@set $lib/strings=L
@@set $lib/strings=W
@@set $lib/strings=/_defs/.asc:"$lib/strings" match "STRasc" call
@@set $lib/strings=/_defs/.blank?:ansi_strip striplead "" strcmp not
@@set $lib/strings=/_defs/.center:"$lib/strings" match "center" call
@@set $lib/strings=/_defs/.chr:"$lib/strings" match "STRchr" call
@@set $lib/strings=/_defs/.command_parse:"$lib/strings" match "STRparse" call
@@set $lib/strings=/_defs/.fillfield:"$lib/strings" match "fillfield" call
@@set $lib/strings=/_defs/.left:"$lib/strings" match "left" call
@@set $lib/strings=/_defs/.right:"$lib/strings" match "right" call
@@set $lib/strings=/_defs/.rsplit:"$lib/strings" match "rsplit" call
@@set $lib/strings=/_defs/.singlespace:"$lib/strings" match "sms" call
@@set $lib/strings=/_defs/.sms:"$lib/strings" match "sms" call
@@set $lib/strings=/_defs/.split:"$lib/strings" match "split" call
@@set $lib/strings=/_defs/.split2:"$lib/strings" match "split" call
@@set $lib/strings=/_defs/.splitarg:"$lib/strings" match "splitargs" call
@@set $lib/strings=/_defs/.splitargs:"$lib/strings" match "splitargs" call
@@set $lib/strings=/_defs/.splitfirst:"$lib/strings" match "splitargs" call
@@set $lib/strings=/_defs/.stripspaces:strip
@@set $lib/strings=/_defs/.strcutat:"$lib/strings" match "splitargs" call
@@set $lib/strings=/_defs/STRasc:"$lib/strings" match "STRasc" call
@@set $lib/strings=/_defs/STRblank?:ansi_strip striplead "" strcmp not
@@set $lib/strings=/_defs/STRcenter:"$lib/strings" match "center" call
@@set $lib/strings=/_defs/STRchr:"$lib/strings" match "STRchr" call
@@set $lib/strings=/_defs/STRfillfield:"$lib/strings" match "fillfield" call
@@set $lib/strings=/_defs/STRleft:"$lib/strings" match "left" call
@@set $lib/strings=/_defs/STRparse:"$lib/strings" match "STRparse" call
@@set $lib/strings=/_defs/STRright:"$lib/strings" match "right" call
@@set $lib/strings=/_defs/STRrsplit:"$lib/strings" match "rsplit" call
@@set $lib/strings=/_defs/STRsinglespace:"$lib/strings" match "sms" call
@@set $lib/strings=/_defs/STRsls:striplead
@@set $lib/strings=/_defs/STRsms:"$lib/strings" match "sms" call
@@set $lib/strings=/_defs/STRsplit:"$lib/strings" match "split" call
@@set $lib/strings=/_defs/STRsplitargs:"$lib/strings" match "splitargs" call
@@set $lib/strings=/_defs/STRstrip:strip
@@set $lib/strings=/_defs/STRsts:striptail
@@set $lib/strings=/_defs/STR-asc:"$lib/strings" match "STRasc" call
@@set $lib/strings=/_defs/STR-blank?:ansi_strip striplead "" strcmp not
@@set $lib/strings=/_defs/STR-null?:"" strcmp not
@@set $lib/strings=/_defs/STR-capitalize:"$lib/strings" match "STR-capitalize" call
@@set $lib/strings=/_defs/STR-center:"$lib/strings" match "center" call
@@set $lib/strings=/_defs/STR-chr:"$lib/strings" match "STRchr" call
@@set $lib/strings=/_defs/STR-cleancommas:"$lib/strings" match "cleancommas" call
@@set $lib/strings=/_defs/STR-command:"$lib/strings" match "STR-command" call
@@set $lib/strings=/_defs/STR-countOccurrence:"$lib/strings" match "STR-countOccurrence" call
@@set $lib/strings=/_defs/STR-fillfield:"$lib/strings" match "fillfield" call
@@set $lib/strings=/_defs/STR-left:"$lib/strings" match "left" call
@@set $lib/strings=/_defs/STR-parse:"$lib/strings" match "STRparse" call
@@set $lib/strings=/_defs/STR-right:"$lib/strings" match "right" call
@@set $lib/strings=/_defs/STR-rsplit:"$lib/strings" match "rsplit" call
@@set $lib/strings=/_defs/STR-singlespace:"$lib/strings" match "sms" call
@@set $lib/strings=/_defs/STR-sls:striplead
@@set $lib/strings=/_defs/STR-sms:"$lib/strings" match "sms" call
@@set $lib/strings=/_defs/STR-split:"$lib/strings" match "split" call
@@set $lib/strings=/_defs/STR-splitargs:"$lib/strings" match "splitargs" call
@@set $lib/strings=/_defs/STR-strip:strip
@@set $lib/strings=/_defs/STR-sts:striptail
@@set $lib/strings=/_docs:@@list $lib/strings=1-60
@@set $lib/strings=/_/de:lib-strings: List lines 1-60 for documentation.
@@set $lib/strings=/_lib-version:FM$Revision: 1.28 $
@@set $lib/strings=/_version:
@@set $lib/strings=/_lib-symbol:STR
wh me=Installation of lib-strings complete.
@


1.28
log
@* Modified STR-parse to handle -cmd /cmd in addition to #cmd
* Added STR-singlespace to the documentation
@
text
@d5 1
a5 1
( lib-strings: $Date: 2008/10/24 02:26:18 $ $Revision: 1.27 $                 )
d61 2
d72 4
d236 4
d249 2
a250 3
;
public STR-countOccurrence

d333 1
d353 1
a353 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.27 $
@


1.27
log
@Added STR-countOccurrence
@
text
@d5 1
a5 1
( lib-strings: $Date: 2008/06/16 02:49:31 $ $Revision: 1.26 $                 )
d35 1
a35 1
(     Splits string into two strings at the first occurence of 'delimiter'.   )
d58 3
d70 3
d253 2
a254 1
: STRparse ( s -- s1 s2 s3 ) (
d257 10
a266 9
    )
    "=" rsplit swap
    striplead dup "#" 1 strncmp not if
        1 strcut swap pop
        " " split
    else
        "" swap
    then
    strip sms rot
d341 4
a344 3
@@set $lib/strings=/_docs:@@list $lib/strings=1-57
@@set $lib/strings=/_/de:lib-strings: List lines 1-57 for documentation.
@@set $lib/strings=/_lib-version:FM$Revision: 1.26 $
@


1.26
log
@Rewrote documentation to be more comprehensible.
@
text
@d5 1
a5 1
( lib-strings: $Date: 2006/08/27 00:15:40 $ $Revision: 1.25 $                 )
d28 3
d67 3
d73 1
a73 1

d76 1
a76 1

d80 1
a80 1
 
d224 12
d320 1
d335 1
a335 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.25 $
@


1.25
log
@Corrected definition of STR-blank?. It now handles strings with glow-ansi
codes in them correctly by stripping them first.

Added STR-null? to parallel STR-blank?. STR-null? will only be true if the
string is entirely empty.
@
text
@d5 1
a5 1
( lib-strings: $Date: 2006/08/02 13:25:08 $ $Revision: 1.24 $                 )
d11 1
a11 34
( These routines deal with spaces in strings.                                 )
( STR-blank?   [       str -- bool          ]  true if str is null or contains)
(                                              only spaces and glow-ansi codes)
( STR-null?    [       str -- bool          ]  returns true if str is null    )
( STR-sms      [       str -- str'          ]  strips multiple internal spaces)
(                                                                             )
( These two are routines to split a string on a substring, non-inclusively.   )
( STR-split    [ str delim -- prestr postr  ]  splits str on first delim.     )
( STR-rsplit   [ str delim -- prestr postr  ]  splits str on last delim.      )
( STR-splitargs[       str -- str str       ]  split a string at first space  )
(                                              or = sign                      )
(                                                                             )
( The following are useful for formatting strings into fields. As of revision )
( 1.10, they are aware of Glow-ansi-codes, and should pad correctly strings   )
( containing them.                                                            )
( STR-fillfield[ str char width -- padstr   ]  return padding string to width )
(                                              chars                          )
( STR-center   [ str width -- str'          ]  center a string in a field.    )
( STR-left     [ str width -- str'          ]  pad string w/ spaces to width  )
(                                              chars                          )
( STR-right    [ str width -- str'          ]  right justify string to width  )
(                                              chars                          )
( These convert between ascii integers and string character.                  )
( STR-asc      [      char -- i             ]  convert character to ASCII     )
(                                              number                         )
( STR-char     [         i -- char          ]  convert number to character    )
(                                                                             )
( This routine is useful for parsing command line input:                      )
( STR-command  [      str -- str            ] "#he" or "-he" or "/he"-> "he"  )
(                                             Returns "" if no #, -, or /     )
( STR-parse    [      str -- str1 str2 str3 ] " #X Y  y = Z" -> "X" "Y y" " Z")
(                                                                             )
( STR-cleancommas [   str  -- str           ] Adds commas to a space-delimited)
(                                             string of items                 )
d13 44
d64 7
d314 3
a316 3
@@set $lib/strings=/_docs:@@list $lib/strings=1-46
@@set $lib/strings=/_/de:lib-strings: List lines 1-46 for documentation.
@@set $lib/strings=/_lib-version:FM$Revision: 1.24 $
@


1.24
log
@Added STR-command...converts a string of '#help' or '/help' or '-help' to
simply 'help'.
@
text
@d5 1
a5 1
( lib-strings: $Date: 2006/01/18 01:01:21 $ $Revision: 1.23 $                 )
d12 4
a15 2
( STR-blank?   [       str -- bool          ]  true if str null or only spaces)
( STR-sms      [       str -- str'          ]  strips mult. internal spaces   )
d53 4
d244 1
a244 1
@@set $lib/strings=/_defs/.blank?:striplead not
d262 1
a262 1
@@set $lib/strings=/_defs/STRblank?:striplead not
d278 2
a279 1
@@set $lib/strings=/_defs/STR-blank?:striplead not
d296 3
a298 3
@@set $lib/strings=/_docs:@@list $lib/strings=1-39
@@set $lib/strings=/_/de:lib-strings: List lines 1-39 for documentation.
@@set $lib/strings=/_lib-version:FM$Revision: 1.23 $
@


1.23
log
@Whoops. Forgot to make cleancommas public.
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/09/26 16:18:53 $ $Revision: 1.22 $                 )
d37 2
d51 3
d56 1
a56 1

d59 1
a59 1

d194 11
d276 1
d291 1
a291 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.22 $
@


1.22
log
@Ported cleancommas from lib-glow-standard
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/09/25 13:07:10 $ $Revision: 1.21 $                 )
d49 3
d214 1
d274 1
a274 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.21 $
@


1.21
log
@Changelog update
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/04/07 21:08:58 $ $Revision: 1.20 $                 )
d8 1
a8 1
( Contributors: Feaelin                                                       )
d39 3
d49 3
d100 11
d255 1
d270 1
a270 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.20 $
@


1.20
log
@Library Symbol added
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/04/05 16:42:56 $ $Revision: 1.19 $                 )
d46 3
a48 3
  Revision 1.19  2005/04/05 16:42:56  feaelin
  *** empty log message ***

d51 1
a51 1

d54 1
a54 1

d57 1
a57 1

d60 1
a60 1

d63 1
a63 1

d66 1
a66 1

d69 1
a69 1

d72 1
a72 1
  
d182 1
a182 1
  
d250 3
a252 3
@@set $lib/strings=/_docs:@@list $lib/strings=1-37
@@set $lib/strings=/_/de:lib-strings: List lines 1-37 for documentation.
@@set $lib/strings=/_lib-version:FM$Revision: 1.19 $
@


1.19
log
@*** empty log message ***
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/04/05 15:31:20 $ $Revision: 1.18 $                 )
d46 3
d252 2
a253 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.18 $
@


1.18
log
@Updated documentation in light of the new library word name standard
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/04/05 15:23:19 $ $Revision: 1.17 $                 )
d39 1
a39 1
( The following routines are deprecated, do not use them.                     ) 
d46 3
d249 1
a249 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.17 $
@


1.17
log
@Provided more aliases of the library words
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/04/03 15:02:27 $ $Revision: 1.16 $                 )
d12 2
a13 5
( STRblank?    [       str -- bool          ]  true if str null or only spaces)
( STRsls       [       str -- str'          ]  strip leading spaces           )
( STRsts       [       str -- str'          ]  strip trailing spaces          )
( STRstrip     [       str -- str'          ]  strip lead and trail spaces    )
( STRsms       [       str -- str'          ]  strips mult. internal spaces   )
d16 3
a18 3
( STRsplit     [ str delim -- prestr postr  ]  splits str on first delim.     )
( STRrsplit    [ str delim -- prestr postr  ]  splits str on last delim.      )
( STRsplitargs [       str -- str str       ]  split a string at first space  )
d24 1
a24 1
( STRfillfield [ str char width -- padstr   ]  return padding string to width )
d26 2
a27 2
( STRcenter    [ str width -- str'          ]  center a string in a field.    )
( STRleft      [ str width -- str'          ]  pad string w/ spaces to width  )
d29 1
a29 1
( STRright     [ str width -- str'          ]  right justify string to width  )
d32 1
a32 1
( STRasc       [      char -- i             ]  convert character to ASCII     )
d34 1
a34 1
( STRchar      [         i -- char          ]  convert number to character    )
d37 6
a42 1
( STRparse     [      str -- str1 str2 str3 ] " #X Y  y = Z" -> "X" "Y y" " Z")
d46 3
d246 1
a246 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.16 $
@


1.16
log
@Simple whitespace changes.
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/04/03 14:55:01 $ $Revision: 1.15 $                 )
d44 3
d223 16
d241 1
a241 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.15 $
@


1.15
log
@Fixed installer script
@
text
@d5 1
a5 1
( lib-strings: $Date: 2005/03/21 01:31:43 $ $Revision: 1.14 $                 )
d44 3
d85 1
a85 1

d95 1
a95 1

d106 1
a106 1
  
d112 1
a112 1
  
d118 1
a118 1
  
d122 1
a122 1
  
d126 1
a126 1
  
d132 1
a132 2
  
  
d144 1
a144 1
  
d154 1
a154 1
  
d222 1
a222 1
@@set $lib/strings=/_lib-version:FM$Revision: 1.14 $
@


1.14
log
@General maintenance and documentation updates
@
text
@d5 1
a5 1
( lib-strings: $Date: 2004/08/06 14:12:22 $ $Revision: 1.13 $                 )
d44 3
d182 39
a220 40
@@register #me lib-strings=tmp/prog1
@@set $tmp/prog1=L
@@set $tmp/prog1=W
@@set $tmp/prog1=/_defs/.asc:"$lib/strings" match "STRasc" call
@@set $tmp/prog1=/_defs/.blank?:striplead not
@@set $tmp/prog1=/_defs/.center:"$lib/strings" match "center" call
@@set $tmp/prog1=/_defs/.chr:"$lib/strings" match "STRchr" call
@@set $tmp/prog1=/_defs/.command_parse:"$lib/strings" match "STRparse" call
@@set $tmp/prog1=/_defs/.fillfield:"$lib/strings" match "fillfield" call
@@set $tmp/prog1=/_defs/.left:"$lib/strings" match "left" call
@@set $tmp/prog1=/_defs/.right:"$lib/strings" match "right" call
@@set $tmp/prog1=/_defs/.rsplit:"$lib/strings" match "rsplit" call
@@set $tmp/prog1=/_defs/.singlespace:"$lib/strings" match "sms" call
@@set $tmp/prog1=/_defs/.sms:"$lib/strings" match "sms" call
@@set $tmp/prog1=/_defs/.split:"$lib/strings" match "split" call
@@set $tmp/prog1=/_defs/.split2:"$lib/strings" match "split" call
@@set $tmp/prog1=/_defs/.splitarg:"$lib/strings" match "splitargs" call
@@set $tmp/prog1=/_defs/.splitargs:"$lib/strings" match "splitargs" call
@@set $tmp/prog1=/_defs/.splitfirst:"$lib/strings" match "splitargs" call
@@set $tmp/prog1=/_defs/.stripspaces:strip
@@set $tmp/prog1=/_defs/.strcutat:"$lib/strings" match "splitargs" call
@@set $tmp/prog1=/_defs/STRasc:"$lib/strings" match "STRasc" call
@@set $tmp/prog1=/_defs/STRblank?:striplead not
@@set $tmp/prog1=/_defs/STRcenter:"$lib/strings" match "center" call
@@set $tmp/prog1=/_defs/STRchr:"$lib/strings" match "STRchr" call
@@set $tmp/prog1=/_defs/STRfillfield:"$lib/strings" match "fillfield" call
@@set $tmp/prog1=/_defs/STRleft:"$lib/strings" match "left" call
@@set $tmp/prog1=/_defs/STRparse:"$lib/strings" match "STRparse" call
@@set $tmp/prog1=/_defs/STRright:"$lib/strings" match "right" call
@@set $tmp/prog1=/_defs/STRrsplit:"$lib/strings" match "rsplit" call
@@set $tmp/prog1=/_defs/STRsinglespace:"$lib/strings" match "sms" call
@@set $tmp/prog1=/_defs/STRsls:striplead
@@set $tmp/prog1=/_defs/STRsms:"$lib/strings" match "sms" call
@@set $tmp/prog1=/_defs/STRsplit:"$lib/strings" match "split" call
@@set $tmp/prog1=/_defs/STRsplitargs:"$lib/strings" match "splitargs" call
@@set $tmp/prog1=/_defs/STRstrip:strip
@@set $tmp/prog1=/_defs/STRsts:striptail
@@set $tmp/prog1=/_docs:@@list $lib/strings=1-37
@@set $tmp/prog1=/_/de:lib-strings: List lines 1-37 for documentation.
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.13 $
@


1.13
log
@Minor documentation corrections.
@
text
@d5 1
a5 1
( lib-strings: $Date: 2004/04/22 17:25:53 $ $Revision: 1.12 $                 )
d44 3
a71 3
  
  Revision 1.1  1998/07/27 21:15:02  feaelin
  Initial revision
d218 1
a218 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.12 $
@


1.12
log
@Documentation Cleanup
@
text
@d5 2
a6 2
( lib-strings: $Date$ $Revision$                )
( Purpose: Replicate and enhance the inserver look routine                    )
d44 3
d58 1
a58 1
  Revision 1.6  1998/07/30 19:20:41  glow
d61 1
a61 1
  Revision 1.4  1998/07/30 19:14:48  glow
d64 1
a64 1
  Revision 1.3  1998/07/30 04:11:20  glow
d67 1
a67 1
  Revision 1.2  1998/07/28 03:35:38  glow
d70 1
a70 1
  Revision 1.1  1998/07/27 21:15:02  glow
d218 1
a218 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.11 $
@


1.11
log
@Documentation correction.
@
text
@d1 1
a1 1
"Beginning installation of lib-strings...
d5 37
a41 36
( lib-strings: $Date: 2001/02/22 20:39:56 $ $Revision: 1.10 $
  Originally included in the FuzzBall MUF archive.                            )
( --------------------------------------------------------------------------  )
( Contributors: Syvel, Feaelin                                                )
( --------------------------------------------------------------------------  )
( 
These routines deal with spaces in strings.
 STRblank?    [       str -- bool          ]  true if str null or only spaces
 STRsls       [       str -- str'          ]  strip leading spaces
 STRsts       [       str -- str'          ]  strip trailing spaces
 STRstrip     [       str -- str'          ]  strip lead and trail spaces
 STRsms       [       str -- str'          ]  strips out mult. internal spaces
  
These two are routines to split a string on a substring, non-inclusively.
 STRsplit     [ str delim -- prestr postr  ]  splits str on first delim.
 STRrsplit    [ str delim -- prestr postr  ]  splits str on last delim.
 STRsplitargs [       str -- str str       ]  split a string at first space or
                                              = sign
  
The following are useful for formatting strings into fields.  As of revision
 1.10, they are aware of Glow-ansi-codes, and should pad correctly strings
 containing them. 
 STRfillfield [ str char width -- padstr   ]  return padding string to width
                                              chars
 STRcenter    [ str width -- str'          ]  center a string in a field.
 STRleft      [ str width -- str'          ]  pad string w/ spaces to width
                                              chars
 STRright     [ str width -- str'          ]  right justify string to width
                                              chars
These convert between ascii integers and string character.
 STRasc       [      char -- i             ]  convert character to ASCII number
 STRchar      [         i -- char          ]  convert number to character
  
This routine is useful for parsing command line input:
 STRparse     [      str -- str1 str2 str3 ] " #X Y  y = Z"  ->  "X" "Y y" " Z"
)
d44 3
d51 1
a51 1

d54 1
a54 1

d57 1
a57 4

  Revision 1.5  1998/07/30 19:15:22  glow
  *** empty log message ***

d60 1
a60 1

d63 1
a63 1

d66 1
a66 1

a68 1

d213 4
a216 4
@@set $tmp/prog1=/_docs:@@list $lib/strings=1-35
@@set $tmp/prog1=/_/de:lib-strings: List lines 1-35 for documentation.
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.10 $
"Installation of lib-strings complete.
@


1.10
log
@Added support to STRfillfield, STRcenter STRleft, STRright to detect
and handle correctly strings with ANSI codes in them.  Credit goes to
Syvel for the original concept for this correction.
@
text
@d5 1
a5 1
( lib-strings: $Date: 2000/01/27 16:57:13 $ $Revision: 1.9 $
d43 5
d213 3
a215 3
@@set $tmp/prog1=/_docs:@@list $lib/strings=1-33
@@set $tmp/prog1=/_/de:lib-strings:List lines 1-33 for documentation.
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.9 $
@


1.9
log
@*** empty log message ***
@
text
@d5 6
a10 4
( lib-strings: $Date: 1999/02/13 19:06:17 $ $Revision: 1.8 $
  Originally included in the FuzzBall MUF archive.                           )
( -------------------------------------------------------------------------- )
( ***** Misc String routines -- STR *****
d24 3
a26 1
The following are useful for formatting strings into fields.
a45 3
  Revision 1.7  1998/07/30 19:25:37  glow
  *** empty log message ***

d100 1
a100 1
  rot strlen - dup 1 < if pop pop "" exit then
d102 1
a102 1
  swap strcut pop
d115 1
a115 1
  dup strlen 2 / strcut
d208 3
a210 3
@@set $tmp/prog1=/_docs:@@list $lib/strings=1-31
@@set $tmp/prog1=/_/de:lib-strings:List lines 1-31 for documentation.
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.8 $
@


1.8
log
@Fixed .split2 entry
@
text
@d5 1
a5 1
( lib-strings: $Date: 1998/07/30 19:25:37 $ $Revision: 1.7 $
d16 3
a18 3
These two are routines to split a string on a substring, non-inclusive.
 STRsplit     [ str delim -- prestr postr  ]  splits str on first delim. nonincl.
 STRrsplit    [ str delim -- prestr postr  ]  splits str on last delim. nonincl.
d23 2
a24 1
 STRfillfield [ str char width -- padstr   ] return padding string to width chars
d26 4
a29 7
 STRleft      [ str width -- str'          ]  pad string w/ spaces to width chars
 STRright     [ str width -- str'          ]  right justify string to width chars
  
The following are case insensitive versions of instr and rinstr:
 instring     [  str str2 -- position      ]  find str2 in str and return pos
 rinstring    [  str str2 -- position      ]  find last str2 in str & return pos
  
d35 1
a35 1
 STRparse     [       str -- str1 str2 str3 ] " #X Y  y = Z"  ->  "X" "Y y" " Z"
d39 3
a172 1
@@set $tmp/prog1=/_/de:lib-strings:List lines 4-31 for documentation.
d207 3
a209 2
@@set $tmp/prog1=/_docs:@@list $lib/strings=4-31
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.7 $
@


1.7
log
@*** empty log message ***
@
text
@d5 1
a5 1
( lib-strings: $Date: 1998/07/30 19:20:41 $ $Revision: 1.6 $
d41 3
d185 1
d208 1
a208 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.6 $
@


1.6
log
@Added synonyms of .split: .splitarg, .splitargs, .splitfirst, .strcutat.
@
text
@d5 1
a5 1
( lib-strings: $Date: 1998/07/30 19:15:22 $ $Revision: 1.5 $
d41 3
d48 1
a48 1
  Added STRsplitargs (.splitargs)
d204 1
a204 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.5 $
@


1.5
log
@*** empty log message ***
@
text
@d5 1
a5 1
( lib-strings: $Date: 1998/07/30 19:14:48 $ $Revision: 1.4 $
d41 3
d179 1
d181 1
d183 1
d201 1
a201 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.4 $
@


1.4
log
@Added STRsplitargs (.splitargs)
@
text
@d5 1
a5 1
( lib-strings: $Date: 1998/07/30 04:11:20 $ $Revision: 1.3 $
d41 3
d155 1
d195 1
a195 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.3 $
@


1.3
log
@Updated STRsplit
@
text
@d5 1
a5 1
( lib-strings: $Date: 1998/07/28 03:35:38 $ $Revision: 1.2 $
d10 5
a14 5
 STRblank?   [       str -- bool         ]  true if str null or only spaces
 STRsls      [       str -- str'         ]  strip leading spaces
 STRsts      [       str -- str'         ]  strip trailing spaces
 STRstrip    [       str -- str'         ]  strip lead and trail spaces
 STRsms      [       str -- str'         ]  strips out mult. internal spaces
d17 4
a20 2
 STRsplit    [ str delim -- prestr postr ]  splits str on first delim. nonincl.
 STRrsplit   [ str delim -- prestr postr ]  splits str on last delim. nonincl.
d23 4
a26 4
 STRfillfield [str char width -- padstr  ] return padding string to width chars
 STRcenter   [ str width -- str'         ]  center a string in a field.
 STRleft     [ str width -- str'         ]  pad string w/ spaces to width chars
 STRright    [ str width -- str'         ]  right justify string to width chars
d29 2
a30 2
 instring    [  str str2 -- position     ]  find str2 in str and return pos
 rinstring   [  str str2 -- position     ]  find last str2 in str & return pos
d33 2
a34 2
 STRasc      [      char -- i            ]  convert character to ASCII number
 STRchar     [         i -- char         ]  convert number to character
d37 1
a37 1
 STRparse    [       str -- str1 str2 str3] " #X Y  y = Z"  ->  "X" "Y y" " Z"
d41 3
d58 10
d172 1
d187 1
d191 1
a191 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.2 $
@


1.2
log
@Corrected wiz-level.
@
text
@d5 1
a5 1
( lib-strings: $Date: 1998/07/27 21:15:02 $ $Revision: 1.1 $
d39 3
d47 4
a50 9
: split
    swap over over swap
    instr dup not if
        pop swap pop ""
    else
        1 - strcut rot
        strlen strcut
        swap pop
    then
d52 1
a52 2
  
  
d174 1
a174 1
@@set $tmp/prog1=/_lib-version:FM$Revision: 1.1 $
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
( lib-strings: $Date$ $Revision$
d38 4
a41 1
  $Log$
a66 1
  
a72 1
  
a128 1
    
d146 1
d177 2
a178 1
@@set $tmp/prog1=/_lib-version:FM$Revision$
@
