wh me=Beginning installation of lib-case...
@prog lib-case
1 99999 d
1 i
( lib-case: $Date: 2005/04/05 13:41:15 $ $Revision: 1.7 $                     )
( Purpose: Provides select...case / switch type functionality to MUF          )
( Authors: Foxen, Fringe                                                      )
( Contributors: None                                                          )
( Dependencies: None                                                          )
( --------------------------------------------------------------------------- )
( Okay, here's an evil idea for you programmers:                              )
( Fringe came up with a truly demented way to get case statements using just  )
( $defines, so we made it into a library.  The library basically makes the    )
( following defines:                                                          )
( --------                                                                    )
( $define case    begin dup       $enddef                                     )
( $define when    if pop          $enddef                                     )
( $define end     break then dup  $enddef                                     )
( $define default pop 1 if        $enddef                                     )
( $define endcase pop pop 1 until $enddef                                     )
( --------                                                                    )
( And what it lets you do is something like this:                             )
( --------                                                                    )
( $include $lib/case                                                          )
( <data> case                                                                 )
(   <test> when <effect> end                                                  )
(   <test> when <effect> end                                                  )
(   <test> when <effect> end                                                  )
(   <test> when <effect> end                                                  )
(   default <otherwise>  end                                                  )
( endcase                                                                     )
( --------                                                                    )
(  This will compile to the following:                                        )
( --------                                                                    )
( <data> begin                                                                )
(   dup <test> if pop <effect> break then                                     )
(   dup <test> if pop <effect> break then                                     )
(   dup <test> if pop <effect> break then                                     )
(   dup <test> if pop <effect> break then                                     )
(   dup pop 1  if <otherwise>  break then                                     )
(   dup pop pop                                                               )
( 1 until                                                                     )
( --------                                                                    )
( The default clause is optional and thats why the wierd 'dup pop pop' is at  )
( the end.  The <otherwise> clause is passed the value that failed to match in)
( any of the tests.  The <tests> can be as complex as you wish, and so can the)
( <effect> and <otherwise> statements. Here's an example using real code:     )
( --------                                                                    )
( read case                                                                   )
(   "#help" over stringcmp not swap "#h" stringcmp not or when do-help end    )
(   "#help2" over stringcmp not swap "#h2" stringcmp not or when do-help2 end )
(   "#list" stringcmp not when do-list end                                    )
(   default pop give-error end                                                )
( endcase                                                                     )
( --------                                                                    )
(  Enjoy!                                                                     )
(          - Foxen                                                            )
( --------------------------------------------------------------------------- )
(
  $Log: lib-case,v $
  Revision 1.7  2005/04/05 13:41:15  feaelin
  Installer update, documentation cleanup

  Revision 1.6  2005/03/21 01:31:42  feaelin
  General maintenance and documentation updates

  Revision 1.5  2001/02/23 16:04:38  feaelin
  Fixed Link_OK setting

  Revision 1.4  2000/02/11 15:10:47  feaelin
  Wasn't properly set link_ok.

  Revision 1.3  1999/02/13 16:35:17  feaelin
  Make that two.

  Revision 1.2  1999/02/13 16:33:02  feaelin
  Ooops. missing paren.
)
: main "" pop ;
.
c
q
@register lib-case=lib/case
@set $lib/case=L
@set $lib/case=/_/de:lib-case: List lines 1-54 for documentation.
@set $lib/case=/_defs/case:begin dup
@set $lib/case=/_defs/default:pop 1 if
@set $lib/case=/_defs/end:break then dup
@set $lib/case=/_defs/endcase:pop pop 1 until
@set $lib/case=/_defs/when:if pop
@set $lib/case=/_docs:@list $lib/case=1-54
@set $lib/case=/_lib-version:FM$Revision: 1.7 $
wh me=Installation of lib-case completed.
