wh me=Beginning installation of cmd-beep...
@prog cmd-beep
1 99999 d
1 i
( cmd-beep: $Date: 2006/08/15 15:02:45 $ $Revision: 1.2 $                     )
( Purpose: Sends a beep message with a ansi-beep tone to a player or room     )
( Author: Andy/Pakrat                                                         )
( --------------------------------------------------------------------------- )
(
  $Log: cmd-beep,v $
  Revision 1.2  2006/08/15 15:02:45  feaelin
  Updated header.
  Eliminated dependence on lib-glow-standard.
  Colorized.

  Revision 1.1  1999/04/18 17:15:41  feaelin
  Initial revision

)

$include $lib/match
 
: private? ( -- i )
  "_private" getpropstr "y" instr
;
 
: cmd-beep ( s -- )
  me @ "GUEST" flag? if
    "^FAIL^Beep cannot be used by guests." ansi_notify
  then
  dup not if pop
    me @ "^SUCC^Usage: beep <player> or beep here -- sends ##beep## to player or room"
    ansi_notify exit
  then
  dup "here" stringcmp not if pop
    loc @ #-1 "^beep^^SUCC^##Beep##" ansi_notify_except
    exit
  then
  MATCH-pmatch dup not if pop
    me @ "^FAIL^I don't know who that is." ansi_notify exit
  then
  dup awake? not if pop
    me @ "^INFO^They are sleeping." ansi_notify exit
  then
  dup "HAVEN" flag? if pop
    me @ "^INFO^They are set haven." ansi_notify exit
  then
  dup private? over location private? or if
    me @ "^INFO^They wish for privacy." ansi_notify exit
  then
  dup "From " me @ name strcat "..." strcat notify
  dup "^beep^^SUCC^##Beep##" ansi_notify
  me @ "^SUCC^Beeped." ansi_notify
;
.
c
q
@register cmd-beep=cmd/beep
@register #me cmd-beep=tmp/prog1
@set $tmp/prog1=M2
@action beep=here=tmp/exit1
@link $tmp/exit1=$tmp/prog1
@set $tmp/exit1=M1
@set $tmp/exit1=/_/de:@$cmd/beep
@set $tmp/prog1=_version:FM$Revision: 1.2 $
wh me=Installation of cmd-beep complete.
